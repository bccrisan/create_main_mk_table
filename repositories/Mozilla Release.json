{
  "node": "d5749c65389e116c2cb6892337556f629908a9ca",
  "changeset_count": 492979,
  "changesets": [
    {
      "node": "d5749c65389e116c2cb6892337556f629908a9ca",
      "date": [
        1541614218.0,
        0
      ],
      "desc": "Automatic version bump CLOSED TREE NO BUG a=release",
      "branch": "default",
      "bookmarks": [],
      "tags": [
        "tip"
      ],
      "user": "Mozilla Releng Treescript <release+treescript@mozilla.org>",
      "phase": "public",
      "parents": [
        "55855d7079cb961eebf8b71d7b479378b3bbb71d"
      ],
      "pushid": 1846,
      "pushdate": [
        1541614230,
        0
      ]
    },
    {
      "node": "55855d7079cb961eebf8b71d7b479378b3bbb71d",
      "date": [
        1541614215.0,
        0
      ],
      "desc": "No bug - Tagging 805f775f35e23e0dfcb60e647650a2b1e8b94226 with FENNEC_63_0_2_RELEASE a=release CLOSED TREE",
      "branch": "default",
      "bookmarks": [],
      "tags": [],
      "user": "Mozilla Releng Treescript <release+treescript@mozilla.org>",
      "phase": "public",
      "parents": [
        "3366ed045ba11c4644e357c7f015e7a481a3c9ec"
      ],
      "pushid": 1846,
      "pushdate": [
        1541614230,
        0
      ]
    },
    {
      "node": "3366ed045ba11c4644e357c7f015e7a481a3c9ec",
      "date": [
        1541510619.0,
        0
      ],
      "desc": "No bug - Tagging 805f775f35e23e0dfcb60e647650a2b1e8b94226 with FENNEC_63_0_2_BUILD1 a=release CLOSED TREE DONTBUILD",
      "branch": "default",
      "bookmarks": [],
      "tags": [],
      "user": "Mozilla Releng Treescript <release+treescript@mozilla.org>",
      "phase": "public",
      "parents": [
        "805f775f35e23e0dfcb60e647650a2b1e8b94226"
      ],
      "pushid": 1845,
      "pushdate": [
        1541510629,
        0
      ]
    },
    {
      "node": "805f775f35e23e0dfcb60e647650a2b1e8b94226",
      "date": [
        1540563520.0,
        0
      ],
      "desc": "Bug 1501449 - Terminate the JVM immediately after CrashReporterService finishes to prevent ANR. r=rbarker, a=pascalc\n\nThis service is started as a foreground service.\nBut because it does little work it doesn't post a Notification to bug the user\nunneededly.\nAlthough all it's work is done in < 5 seconds, after them passing the\nActivityManager will post an ANR error to logcat because we aren't calling\nService.startForeground() and actually posting a Notification.\nAlthough nothing gets through to the user this errors are registered in the\nGoogle Play console.\nTo prevent them we terminate the currently running JVM immedately after\nCrashReporterService's work is completed, which is under those ~5 seconds.\n\nThe call for this is put into onUnbind() because in my tests if that call is put\nat the end of onHandleWork() the JVM would be shutdown before the JobScheduler\nwould have had the chance to unbind and so after some time the service would be\nbinded again, and onHandleWork would be executed again.\nonUbind() is called immediately after onHandleWork() finishes, after JobScheduler\nunbinds, so this seems the earliest possible moment to terminate.\n\nDifferential Revision: https://phabricator.services.mozilla.com/D9919",
      "branch": "default",
      "bookmarks": [],
      "tags": [
        "FENNEC_63_0_2_BUILD1",
        "FENNEC_63_0_2_RELEASE"
      ],
      "user": "Petru Lingurar <petru.lingurar@softvision.ro>",
      "phase": "public",
      "parents": [
        "3acb6478c0abf988dd6b7c2d01626086f44ac7c4"
      ],
      "pushid": 1844,
      "pushdate": [
        1541431268,
        0
      ]
    },
    {
      "node": "3acb6478c0abf988dd6b7c2d01626086f44ac7c4",
      "date": [
        1540941297.0,
        -7200
      ],
      "desc": "Bug 1502435 - Update tests to include checks for canary clientId. r=jchen, a=pascalc",
      "branch": "default",
      "bookmarks": [],
      "tags": [],
      "user": "Petru Lingurar <petru.lingurar@softvision.ro>",
      "phase": "public",
      "parents": [
        "6166ae37d035261d743e17f1a92a36a6a7fce735"
      ],
      "pushid": 1844,
      "pushdate": [
        1541431268,
        0
      ]
    },
    {
      "node": "6166ae37d035261d743e17f1a92a36a6a7fce735",
      "date": [
        1540941237.0,
        -7200
      ],
      "desc": "Bug 1502435 - Include new `bug_1501329_affected` property in the core ping. r=jchen, a=pascalc\n\nSummary: Depends on D10202\n\nReviewers: jchen\n\nReviewed By: jchen\n\nSubscribers: jchen, janerik\n\nBug #: 1502435\n\nDifferential Revision: https://phabricator.services.mozilla.com/D10205",
      "branch": "default",
      "bookmarks": [],
      "tags": [],
      "user": "Petru Lingurar <petru.lingurar@softvision.ro>",
      "phase": "public",
      "parents": [
        "2ff0200c61b375cbbc543089364efe4d70a1e894"
      ],
      "pushid": 1844,
      "pushdate": [
        1541431268,
        0
      ]
    },
    {
      "node": "2ff0200c61b375cbbc543089364efe4d70a1e894",
      "date": [
        1540916882.0,
        0
      ],
      "desc": "Bug 1502435 - Set valid clientId and save if previous was canary clientId. r=jchen, a=pascalc\n\nDifferential Revision: https://phabricator.services.mozilla.com/D10202",
      "branch": "default",
      "bookmarks": [],
      "tags": [],
      "user": "Petru Lingurar <petru.lingurar@softvision.ro>",
      "phase": "public",
      "parents": [
        "713bae63f71488c3f112cfb89998b3b6985df649"
      ],
      "pushid": 1844,
      "pushdate": [
        1541431268,
        0
      ]
    },
    {
      "node": "713bae63f71488c3f112cfb89998b3b6985df649",
      "date": [
        1540584353.0,
        0
      ],
      "desc": "Bug 1501329 - Expose \"wasCanary\" flag in saved-session pings for Fennec. r=chutten, a=pascalc\n\nDepends on D9903\n\nDepends on D9903\n\nDifferential Revision: https://phabricator.services.mozilla.com/D9904",
      "branch": "default",
      "bookmarks": [],
      "tags": [],
      "user": "Jan-Erik Rediger <jrediger@mozilla.com>",
      "phase": "public",
      "parents": [
        "565452061d53fdddc73076d56ead17904cc37da4"
      ],
      "pushid": 1844,
      "pushdate": [
        1541431268,
        0
      ]
    },
    {
      "node": "565452061d53fdddc73076d56ead17904cc37da4",
      "date": [
        1540576873.0,
        0
      ],
      "desc": "Bug 1501329 - Persist information about canary after resetting client ID. r=chutten, a=pascalc\n\nWe erroneously reset client IDs on Fennec to a canary client ID.\nThis is now detected and a new valid and random client ID is set.\n\nThis adds a new boolean attribute \"wasCanary\" to the `state.json` file\ngenerated by ClientID.jsm.\n\nDepends on D9544\n\nDifferential Revision: https://phabricator.services.mozilla.com/D9903",
      "branch": "default",
      "bookmarks": [],
      "tags": [],
      "user": "Jan-Erik Rediger <jrediger@mozilla.com>",
      "phase": "public",
      "parents": [
        "7247a70272a2a209c3bae52131490bf47461d4ae"
      ],
      "pushid": 1844,
      "pushdate": [
        1541431268,
        0
      ]
    },
    {
      "node": "7247a70272a2a209c3bae52131490bf47461d4ae",
      "date": [
        1540577868.0,
        0
      ],
      "desc": "Bug 1501329 - Set valid client ID on Fennec if canary is detected. r=chutten, a=pascalc\n\nDifferential Revision: https://phabricator.services.mozilla.com/D9544",
      "branch": "default",
      "bookmarks": [],
      "tags": [],
      "user": "Jan-Erik Rediger <jrediger@mozilla.com>",
      "phase": "public",
      "parents": [
        "ea5bceb1d4ac5ea197ac2d08fdbc13b9a551805d"
      ],
      "pushid": 1844,
      "pushdate": [
        1541431268,
        0
      ]
    },
    {
      "node": "ea5bceb1d4ac5ea197ac2d08fdbc13b9a551805d",
      "date": [
        1540539541.0,
        0
      ],
      "desc": "Bug 1497526 - TransactionTooLargeException when downloading from Data URLs. r=jchen, a=pascalc\n\nThe issue stems from putting download's source url as `cookie` in the\npending intent for when the download notification is clicked.\nThis cookie functions like a tag, allowing to identify a particular download.\n\nThe problem is that a download's url can be a Data URL for which Mozilla\nimposes no size limit.\nWhen an Android Intent with that payload is used it counts against Binder's\n1MB limit which can result in the TransactionTooLargeException.\n\nIf we are to truncate download's source url to an arbitrary length of 100\nwe should still get a unique `cookie` for that download and at the same time\navoid cluttering Notification's contentIntent.\n\nDifferential Revision: https://phabricator.services.mozilla.com/D9666",
      "branch": "default",
      "bookmarks": [],
      "tags": [],
      "user": "Petru Lingurar <petru.lingurar@softvision.ro>",
      "phase": "public",
      "parents": [
        "b71bed0c6a406ed533aab5867600bd3f62a7c0c3"
      ],
      "pushid": 1844,
      "pushdate": [
        1541431268,
        0
      ]
    },
    {
      "node": "b71bed0c6a406ed533aab5867600bd3f62a7c0c3",
      "date": [
        1540407737.0,
        -7200
      ],
      "desc": "Bug 1500906 - Suppress FileUriExposedExceptions when launching helper apps. r=jchen, a=pascalc\n\nSharing tabs with file:// URIs is not possible, but users can still send them to\nother apps via the helper app system in the URL bar/context menu. \"Intent:Open\"\nand \"Intent:OpenForResult\" are both sent from Gecko by HelperApps.jsm.\n\nThe same reasoning as in bug 1450449 applies as to why for publicly accessible\nfiles content:// URIs are more trouble than they're worth.\n\nDifferential Revision: https://phabricator.services.mozilla.com/D9697",
      "branch": "default",
      "bookmarks": [],
      "tags": [],
      "user": "Jan Henning <jh+bitbucket@buttercookie.de>",
      "phase": "public",
      "parents": [
        "032ed494717a65ce4802f86f1369e60efbf8d3a8"
      ],
      "pushid": 1843,
      "pushdate": [
        1541429145,
        0
      ]
    },
    {
      "node": "032ed494717a65ce4802f86f1369e60efbf8d3a8",
      "date": [
        1540404895.0,
        0
      ],
      "desc": "Bug 1493742 - When accepting a layout viewport update from the main thread, constrain its position to enclose the visual viewport. r=kats, a=pascalc\n\nAPZ wants the *size* of the layout viewport from the main thread, but it\nknows the position better.\n\nDifferential Revision: https://phabricator.services.mozilla.com/D9448",
      "branch": "default",
      "bookmarks": [],
      "tags": [],
      "user": "Botond Ballo <botond@mozilla.com>",
      "phase": "public",
      "parents": [
        "defc169a1ee347ab4aabada9da44a859186448c8"
      ],
      "pushid": 1843,
      "pushdate": [
        1541429145,
        0
      ]
    },
    {
      "node": "defc169a1ee347ab4aabada9da44a859186448c8",
      "date": [
        1539706638.0,
        0
      ],
      "desc": "Bug 1498854 - Rework dismissing of TabHistoryFragment. r=jchen, a=pascalc\n\n1. The patch from bug 1476710 was nonsense and had the same effect as simply\n   deleting that line, because the ChildFragmentManager is only of interest if\n   the TabHistoryFragment loaded further Fragments itself.\n2. The issue at hand is that under some circumstances the TabHistoryFragment\n   will be trying to dismiss itself while its responsible FragmentManager is\n   already busy transacting some Fragment state changes.  More precisely, the\n   fact that the Fragment is calling popBackStack*Immediately*, which isn't\n   allowed if the FragmentManager is already handling some other transaction.\n3. The dismiss() calls in response to the onClick() handlers are unproblematic,\n   because they won't trigger any FragmentManager activity through any route\n   other than the dismiss() call itself.\n4. The dismiss() calls in onPause() *are* problematic because the Fragment-\n   Manager will already be busy pausing the TabHistoryFragment, so triggering a\n   further synchronous transaction is not allowed (and originally caused\n   bug 1476710).\n5. If the onPause() call happened because some external entity was attempting to\n   remove the fragment (either BrowserApp directly, or indirectly by forwarding\n   a back button press to the FragmentManager), then the Fragment trying to\n   additionally remove itself is unnecessary.\n6. If the onPause() call happens because the containing activity itself is being\n   paused, then the Fragment being dismissed is the desired outcome (see\n   bug 1093209), however the Fragment won't be able to remove itself because\n   a) A synchronous transaction is illegal at that point in time.\n   b) An async transaction would be possible, but might not complete until after\n      onSaveInstanceState() had subsequently already been called, which again\n      would be illegal because of state loss.\n   c) An async transaction allowing state loss would succeed in any case, but\n      would mean that if BrowserApp was subsequently destroyed while in back-\n      ground and then later recreated from the savedInstanceState, the Tab-\n      HistoryFragment would be recreated as well, which is undesired.\n7. Therefore, the only way to dismiss the TabHistoryFragment when the containing\n   activity is pausing is to synchronously dismiss the Fragment from inside the\n   activity, *before* the onPause() call is forwarded to the FragmentManager.\n8. Calling dismiss() in response to onDestroy() is unnecessary, because the\n   Fragment is already irrevocably being removed as soon as we hit onPause().\n9. Because it doesn't make sense to have multiple TabHistoryFragments active at\n   the same time, we also change the logic such that any attempt to show a new\n   TabHistoryFragment will now replace the previous fragment.\n   This is also useful in view of the fact that in order to close the Fragment,\n   BrowserApp retrieves it by calling findFragmentByTag(), which simply returns\n   the first matching Fragment, i.e. wouldn't properly handle things if we ever\n   accidentally ended up with multiple Fragment instances active at the same\n   time.\n\nDifferential Revision: https://phabricator.services.mozilla.com/D8680",
      "branch": "default",
      "bookmarks": [],
      "tags": [],
      "user": "Jan Henning <jh+bugzilla@buttercookie.de>",
      "phase": "public",
      "parents": [
        "f91ac8ecb4dc28b0117963672361415ee769bc8c"
      ],
      "pushid": 1843,
      "pushdate": [
        1541429145,
        0
      ]
    },
    {
      "node": "f91ac8ecb4dc28b0117963672361415ee769bc8c",
      "date": [
        1541034197.0,
        -7200
      ],
      "desc": "Bug 1503751 - Increase year for check of valid credit card if current month is near end of year. r=MattN on IRC a=Aryx",
      "branch": "default",
      "bookmarks": [],
      "tags": [],
      "user": "Sebastian Hengst <archaeopteryx@coole-files.de>",
      "phase": "public",
      "parents": [
        "92e511ba4fa34887de188ec0d87ad6f7f0c3d47b"
      ],
      "pushid": 1842,
      "pushdate": [
        1541035791,
        0
      ]
    },
    {
      "node": "92e511ba4fa34887de188ec0d87ad6f7f0c3d47b",
      "date": [
        1541024783.0,
        0
      ],
      "desc": "Automatic version bump CLOSED TREE NO BUG a=release",
      "branch": "default",
      "bookmarks": [],
      "tags": [],
      "user": "Mozilla Releng Treescript <release+treescript@mozilla.org>",
      "phase": "public",
      "parents": [
        "60167ff9eb34cce1732f214fa3d5ae7f90d531a1"
      ],
      "pushid": 1841,
      "pushdate": [
        1541024794,
        0
      ]
    },
    {
      "node": "60167ff9eb34cce1732f214fa3d5ae7f90d531a1",
      "date": [
        1541024780.0,
        0
      ],
      "desc": "No bug - Tagging 6d5e52718c0092c7cc8c5d07b01803debc1cb2f2 with FIREFOX_63_0_1_RELEASE a=release CLOSED TREE",
      "branch": "default",
      "bookmarks": [],
      "tags": [],
      "user": "Mozilla Releng Treescript <release+treescript@mozilla.org>",
      "phase": "public",
      "parents": [
        "b24e03d62e3a2d69a30999e4cd25b8fc986fcc3e"
      ],
      "pushid": 1841,
      "pushdate": [
        1541024794,
        0
      ]
    },
    {
      "node": "b24e03d62e3a2d69a30999e4cd25b8fc986fcc3e",
      "date": [
        1540944437.0,
        0
      ],
      "desc": "No bug - Tagging 6d5e52718c0092c7cc8c5d07b01803debc1cb2f2 with FIREFOX_63_0_1_BUILD4 a=release CLOSED TREE DONTBUILD",
      "branch": "default",
      "bookmarks": [],
      "tags": [],
      "user": "Mozilla Releng Treescript <release+treescript@mozilla.org>",
      "phase": "public",
      "parents": [
        "713992e8e2ae2c19e0a5373a9c359795d6b9cfa6"
      ],
      "pushid": 1840,
      "pushdate": [
        1540944446,
        0
      ]
    },
    {
      "node": "713992e8e2ae2c19e0a5373a9c359795d6b9cfa6",
      "date": [
        1540942071.0,
        0
      ],
      "desc": "No bug - Tagging 6d5e52718c0092c7cc8c5d07b01803debc1cb2f2 with FIREFOX_63_0_1_BUILD3 a=release CLOSED TREE DONTBUILD",
      "branch": "default",
      "bookmarks": [],
      "tags": [],
      "user": "Mozilla Releng Treescript <release+treescript@mozilla.org>",
      "phase": "public",
      "parents": [
        "6d5e52718c0092c7cc8c5d07b01803debc1cb2f2"
      ],
      "pushid": 1839,
      "pushdate": [
        1540942081,
        0
      ]
    },
    {
      "node": "6d5e52718c0092c7cc8c5d07b01803debc1cb2f2",
      "date": [
        1540842475.0,
        0
      ],
      "desc": "Bug 1501656 - Prevent CFR impression pings being sent twice because of redirect events. r=ursula, a=pascalc\n\nDifferential Revision: https://phabricator.services.mozilla.com/D10115",
      "branch": "default",
      "bookmarks": [],
      "tags": [
        "FIREFOX_63_0_1_BUILD3",
        "FIREFOX_63_0_1_BUILD4",
        "FIREFOX_63_0_1_RELEASE"
      ],
      "user": "k88hudson <k88hudson@gmail.com>",
      "phase": "public",
      "parents": [
        "57ecd86334a5be4ada8f24d8bdb82880f5172264"
      ],
      "pushid": 1838,
      "pushdate": [
        1540918603,
        0
      ]
    }
  ]
}